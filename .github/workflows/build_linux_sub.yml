name: Libspectrum for Linux
run-name: Build and test Libspectrum for Linux / ${{ github.actor }} /

on:
  # Called from fuse app, fuse utils repos
  workflow_call:
    inputs:
      # Name this setup (no spaces please)
      key:
        type: string
        required: true
      # Path where to clone
      path:
        type: string
        required: false
        default: '.'
      # Which branch to checkout
      branch:
        type: string
        required: false
        default: ""
      # Configure supported libs
      use_zlib:
        type: boolean
        required: false
        default: true
      use_bzip2:
        type: boolean
        required: false
        default: true
      use_libgcrypt:
        type: boolean
        required: false
        default: true
      use_libaudiofile:
        type: boolean
        required: false
        default: true
      use_fake_glib:
        type: boolean
        required: false
        default: false
      # Repo is taken from var.LIBSPECTRUM_REPO, cannot be passed as input.

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path || '.' }}
    env:
      # Support push and call triggers, set env.variables
      LIBSPECTRUM_REPO: ${{ vars.LIBSPECTRUM_REPO || '' }}
      LIBSPECTRUM_BRANCH: ${{ inputs.branch || '' }}
      LIBSPECTRUM_PATH: ${{ inputs.path || '.' }}

    steps:
      - name: (1) Prepare environment
        run: |
          echo -n "Current directory: "
          pwd
          ls -la
          
          echo "Libspectrum repo: $LIBSPECTRUM_REPO"
          echo "Libspectrum branch: $LIBSPECTRUM_BRANCH"
          echo "Libspectrum path: $LIBSPECTRUM_PATH"
          
          echo "Use lib zlib: ${{ inputs.use_zlib && 'yes' || 'no' }}"
          echo "Use lib bzip2: ${{ inputs.use_bzip2 && 'yes' || 'no' }}"
          echo "Use lib libgcrypt: ${{ inputs.use_libgcrypt && 'yes' || 'no' }}"
          echo "Use lib libaudiofile: ${{ inputs.use_libaudiofile && 'yes' || 'no' }}"
          echo "Use fake glib: ${{ inputs.use_fake_glib && 'yes' || 'no' }}"

      - name: (2) Check out repository code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LIBSPECTRUM_REPO }}
          ref: ${{ env.LIBSPECTRUM_BRANCH }}
          path: ${{ env.LIBSPECTRUM_PATH }}

      - name: (3) Install dependencies
        run: |
          pwd
          ls -la
          echo "Installing dependencies .."
          sudo apt install -y \
            libaudiofile-dev \
            libbz2-dev \
            libgcrypt-dev \
            libglib2.0-dev \
            libxml2-dev

      - name: (4) Autogen.sh
        run: |
          echo "Running autogen.sh .."
          ./autogen.sh

      - name: (5) Configure for linux
        run: |
          echo "Running configure .."
          ./configure \
          ${{ inputs.use_zlib == false && '--without-zlib' || '' }} \
          ${{ inputs.use_bzip2 == false && '--without-bzip2' || '' }} \
          ${{ inputs.use_libgcrypt == false && '--without-libgcrypt' || '' }} \
          ${{ inputs.use_libaudiofile == false && '--without-libaudiofile' || '' }} \
          ${{ inputs.use_fake_glib == true && '--with-fake-glib' || '' }} \
          | tee ./configure.out

      - name: (6) Verify output from configure
        run: |
          .github/scripts/in_config.sh "libspectrum is ready to be compiled"
          .github/scripts/in_config.sh "zlib support: ${{ inputs.use_zlib && 'yes' || 'no' }}"
          .github/scripts/in_config.sh "bzip2 support: ${{ inputs.use_bzip2 && 'yes' || 'no' }}"
          .github/scripts/in_config.sh "libgcrypt support: ${{ inputs.use_libgcrypt && 'yes' || 'no' }}"
          .github/scripts/in_config.sh "libaudiofile support: ${{ inputs.use_libaudiofile && 'yes' || 'no' }}"
          .github/scripts/in_config.sh "Internal GLib replacement: ${{ inputs.use_fake_glib && 'yes' || 'no' }}"

      - name: (7) Make
        run: |
          echo "Running make .."
          make

      - name: (8) Install
        run: |
          echo "Running make install .."
          sudo make install

      - name: (9) Run tests
        run: |
          echo "Bulding and running tests .."
          make check

      - name: (10) Upload generated files
        # Need to pack files to maintain permissions (+x mainly)
        run: |
          find /usr/local | grep libspectrum > .tar_files
          sudo tar -cvf \
          libspectrum-installed-linux.tar \
          -C /usr/local/ -T.tar_files

      - uses: actions/upload-artifact@v3
        with: 
          name: libspectrum-installed-linux-${{ inputs.key }}
          path: |
            libspectrum-installed-linux.tar

      - name: (11) Finish
        run: |
          echo "🍏 Finishing with status ${{ job.status }}."
